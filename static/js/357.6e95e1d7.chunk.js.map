{"version":3,"file":"static/js/357.6e95e1d7.chunk.js","mappings":"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","sources":["components/BackLink.js","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.js","services/API.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport { TiArrowBackOutline } from 'react-icons/ti';\nimport styled from 'styled-components';\n\nconst StyledLink = styled(Link)`\n  display: flex;\n  width: fit-content;\n  border: 1px solid white;\n  border-radius: 4px;\n  background-color: white;\n  padding: 8px;\n  text-decoration: none;\n  font-weight: 500;\n  font-size: 18px;\n  gap: 4px;\n  align-items: center;\n  justify-content: baseline;\n  margin: 10px;\n  :hover {\n    border-color: orange;\n    background-color: orange;\n    color: white;\n  }\n`;\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <TiArrowBackOutline size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n","import styled from 'styled-components';\n\nexport const DetailsContainer = styled.div`\n  display: flex;\n  gap: 30px;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  border-bottom: 1px solid grey;\n`;\n\nexport const FilmTitle = styled.h2`\n  font-size: 48px;\n  font-weight: 600;\n  margin-bottom: 15px;\n`;\nexport const FilmBox = styled.div`\n  display: flex;\n  justify-content: space-between;\n  font-size: 20px;\n  font-weight: 500;\n  margin-bottom: 15px;\n`;\n\nexport const FilmOverview = styled.p`\n  font-size: 20px;\n  font-weight: 500;\n`;\n\nexport const FilmContent = styled.span`\n  font-size: 18px;\n  font-weight: 400;\n`;\n\nexport const FilmGenres = styled.ul`\n  font-size: 20px;\n  font-weight: 500;\n`;\nexport const FilmGenresItem = styled.li`\n  font-size: 18px;\n  font-weight: 400;\n  margin-bottom: 10px;\n  margin-top: 10px;\n`;\n\nexport const AdditionalSection = styled.div`\n  padding-top: 10px;\n  padding-bottom: 10px;\n  border-bottom: 1px solid gray;\n`;\n","import { BackLink } from 'components/BackLink';\nimport { useEffect, useState } from 'react';\nimport { useLocation, useParams, Link, Outlet } from 'react-router-dom';\nimport { getMovieById } from 'services/API';\nimport {\n  DetailsContainer,\n  FilmTitle,\n  FilmBox,\n  FilmContent,\n  FilmOverview,\n  FilmGenres,\n  FilmGenresItem,\n  AdditionalSection,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState({});\n  const location = useLocation();\n\n  useEffect(() => {\n    async function getMovie() {\n      try {\n        const responce = await getMovieById(movieId);\n        console.log(responce);\n        setMovie(responce);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getMovie();\n  }, [movieId]);\n\n  return (\n    <>\n      <BackLink to={location.state?.from ?? '/movie'}>Back</BackLink>\n      <DetailsContainer>\n        <img\n          src={`https://image.tmdb.org/t/p/w300/${movie.poster_path}`}\n          alt={movie.title}\n        />\n        <div>\n          <FilmTitle>{movie.title}</FilmTitle>\n          <FilmBox>\n            <p>\n              Date of release: <FilmContent>{movie.release_date}</FilmContent>\n            </p>\n            <p>\n              User Score: <FilmContent>{movie.vote_average}</FilmContent>\n            </p>\n          </FilmBox>\n          <FilmOverview>\n            Overview: <FilmContent>{movie.overview}</FilmContent>\n          </FilmOverview>\n          <FilmGenres>\n            Genres:\n            {movie.genres &&\n              movie.genres.map(item => (\n                <FilmGenresItem key={item.id}>{item.name}</FilmGenresItem>\n              ))}\n          </FilmGenres>\n        </div>\n      </DetailsContainer>\n\n      <AdditionalSection>\n        <FilmOverview>Additional information</FilmOverview>\n        <ul>\n          <FilmGenresItem>\n            <Link to={'cast'} state={{ from: location.state.from }}>\n              Cast\n            </Link>\n          </FilmGenresItem>\n          <FilmGenresItem>\n            <Link to={'reviews'} state={{ from: location.state.from }}>\n              Reviews\n            </Link>\n          </FilmGenresItem>\n        </ul>\n      </AdditionalSection>\n      <Outlet />\n    </>\n  );\n};\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = 'cd467bf58867975fca1c146cba682fc3';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\n// axios.defaults.baseURL = BASE_URL;\n\nexport const getTrendingMoovies = async () => {\n  // type:all, movie, tv, person;\n  // time: day, week;\n  const responce = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return responce.data;\n};\n\n//api.themoviedb.org/3/trending/movie/day?api_key=cd467bf58867975fca1c146cba682fc3\n\nexport const getSearchQuery = async searchQuery => {\n  const responce = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${searchQuery}&page=1&language=en-US`\n  );\n  console.log(responce.data);\n  return responce.data;\n};\n\nexport const getMovieById = async id => {\n  const responce = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return responce.data;\n};\n\nexport const getMovieCast = async id => {\n  const responce = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return responce.data;\n};\n\nexport const getMovieReviews = async id => {\n  const responce = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return responce.data;\n};\n\n// https://api.themoviedb.org/3/search/company?api_key=cd467bf58867975fca1c146cba682fc3&query={поиск запрос}&page={страница}\n\n// /trending/get-trending {/trending/{media_type}/{time_window}} список самых популярных фильмов на сегодня для создания коллекции на главной странице.\n// /search/search-movies поиск кинофильма по ключевому слову на странице фильмов.\n// /movies/get-movie-details запрос полной информации о фильме для страницы кинофильма.\n// /movies/get-movie-credits запрос информации о актёрском составе для страницы кинофильма.\n// /movies/get-movie-reviews запрос обзоров для страницы кинофильма.\n"],"names":["StyledLink","styled","Link","BackLink","to","children","size","DetailsContainer","FilmTitle","FilmBox","FilmOverview","FilmContent","FilmGenres","FilmGenresItem","AdditionalSection","movieId","useParams","useState","movie","setMovie","location","useLocation","useEffect","getMovieById","responce","console","log","getMovie","state","from","src","poster_path","alt","title","release_date","vote_average","overview","genres","map","item","name","id","API_KEY","BASE_URL","getTrendingMoovies","axios","data","getSearchQuery","searchQuery","getMovieCast","getMovieReviews"],"sourceRoot":""}