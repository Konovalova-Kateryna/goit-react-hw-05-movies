{"version":3,"file":"static/js/806.f3459b9f.chunk.js","mappings":"+RAEaA,EAAcC,EAAAA,GAAAA,GAAH,mFAKXC,EAAeD,EAAAA,GAAAA,EAAH,yFAMZE,EAAiBF,EAAAA,GAAAA,EAAH,iE,SC2B3B,EAnCgB,WACd,OAA8BG,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAeR,OAbAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE2BC,EAAAA,EAAAA,iBAAgBH,GAF3C,OAEUI,EAFV,OAGIL,GAAW,OAAIK,EAASC,UACxBC,QAAQC,IAAIH,GAJhB,gDAMIE,QAAQC,IAAR,MANJ,0DADc,uBAAC,WAAD,wBAUdC,EACD,GAAE,CAACR,KAGF,8BAC6B,IAA1BF,EAAQW,eACP,SAACb,EAAD,sCAEA,SAACH,EAAD,UACGK,EAAQY,KAAI,SAAAC,GAAI,OACf,2BACE,SAAChB,EAAD,UAAegB,EAAKC,UACpB,SAAChB,EAAD,UAAiBe,EAAKE,YAFfF,EAAKG,GADC,OAU1B,C,gRCpCKC,EAAU,mCACVC,EAAW,+BAIJC,EAAkB,mCAAG,oGAGTC,IAAAA,IAAA,UAClBF,EADkB,uCACqBD,IAJZ,cAG1BX,EAH0B,yBAMzBA,EAASe,MANgB,2CAAH,qDAWlBC,EAAc,mCAAG,WAAMC,GAAN,uFACLH,IAAAA,IAAA,UAClBF,EADkB,iCACeD,EADf,kBACgCM,EADhC,2BADK,cACtBjB,EADsB,OAI5BE,QAAQC,IAAIH,EAASe,MAJO,kBAKrBf,EAASe,MALY,2CAAH,sDAQdG,EAAY,mCAAG,WAAMR,GAAN,uFACHI,IAAAA,IAAA,UAClBF,EADkB,kBACAF,EADA,oBACcC,EADd,oBADG,cACpBX,EADoB,yBAInBA,EAASe,MAJU,2CAAH,sDAOZI,EAAY,mCAAG,WAAMT,GAAN,uFACHI,IAAAA,IAAA,UAClBF,EADkB,kBACAF,EADA,4BACsBC,EADtB,oBADG,cACpBX,EADoB,yBAInBA,EAASe,MAJU,2CAAH,sDAOZhB,EAAe,mCAAG,WAAMW,GAAN,uFACNI,IAAAA,IAAA,UAClBF,EADkB,kBACAF,EADA,4BACsBC,EADtB,2BADM,cACvBX,EADuB,yBAItBA,EAASe,MAJa,2CAAH,qD","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.js","services/API.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 25px;\n`;\nexport const ReviewsAutor = styled.p`\n  font-size: 20px;\n  font-weight: 600;\n  margin-bottom: 15px;\n`;\n\nexport const ReviewsContent = styled.p`\n  font-size: 18px;\n  font-weight: 400;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services/API';\nimport { ReviewsAutor, ReviewsContent, ReviewsList } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function getReviews() {\n      try {\n        const responce = await getMovieReviews(movieId);\n        setReviews([...responce.results]);\n        console.log(responce);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.total_results === 0 ? (\n        <ReviewsContent>There is no review yet</ReviewsContent>\n      ) : (\n        <ReviewsList>\n          {reviews.map(item => (\n            <li key={item.id}>\n              <ReviewsAutor>{item.author}</ReviewsAutor>\n              <ReviewsContent>{item.content}</ReviewsContent>\n            </li>\n          ))}\n        </ReviewsList>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = 'cd467bf58867975fca1c146cba682fc3';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\n// axios.defaults.baseURL = BASE_URL;\n\nexport const getTrendingMoovies = async () => {\n  // type:all, movie, tv, person;\n  // time: day, week;\n  const responce = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return responce.data;\n};\n\n//api.themoviedb.org/3/trending/movie/day?api_key=cd467bf58867975fca1c146cba682fc3\n\nexport const getSearchQuery = async searchQuery => {\n  const responce = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${searchQuery}&page=1&language=en-US`\n  );\n  console.log(responce.data);\n  return responce.data;\n};\n\nexport const getMovieById = async id => {\n  const responce = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return responce.data;\n};\n\nexport const getMovieCast = async id => {\n  const responce = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return responce.data;\n};\n\nexport const getMovieReviews = async id => {\n  const responce = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return responce.data;\n};\n\n// https://api.themoviedb.org/3/search/company?api_key=cd467bf58867975fca1c146cba682fc3&query={поиск запрос}&page={страница}\n\n// /trending/get-trending {/trending/{media_type}/{time_window}} список самых популярных фильмов на сегодня для создания коллекции на главной странице.\n// /search/search-movies поиск кинофильма по ключевому слову на странице фильмов.\n// /movies/get-movie-details запрос полной информации о фильме для страницы кинофильма.\n// /movies/get-movie-credits запрос информации о актёрском составе для страницы кинофильма.\n// /movies/get-movie-reviews запрос обзоров для страницы кинофильма.\n"],"names":["ReviewsList","styled","ReviewsAutor","ReviewsContent","useState","reviews","setReviews","movieId","useParams","useEffect","getMovieReviews","responce","results","console","log","getReviews","total_results","map","item","author","content","id","API_KEY","BASE_URL","getTrendingMoovies","axios","data","getSearchQuery","searchQuery","getMovieById","getMovieCast"],"sourceRoot":""}