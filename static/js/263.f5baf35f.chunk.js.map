{"version":3,"file":"static/js/263.f5baf35f.chunk.js","mappings":"yOAGaA,EAAkBC,EAAAA,GAAAA,GAAH,sGAOfC,EAAgBD,EAAAA,GAAAA,GAAH,gEAKbE,EAAiBF,EAAAA,GAAAA,EAAH,qFAMdG,GAAYH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,yG,SCbTK,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpBC,GAAWC,EAAAA,EAAAA,MAEjB,OADAC,QAAQC,IAAIJ,IAEV,SAACP,EAAD,UACGO,EAAOK,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAd,OACV,SAACb,EAAD,WACE,UAACE,EAAD,CAAWY,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMV,GAA/C,WACE,gBACEW,IAAG,0CAAqCJ,GACxCK,IAAKN,KAEP,SAACX,EAAD,UAAiBW,QANDD,EADV,KAajB,C,+HCvBYQ,EAAkBpB,EAAAA,GAAAA,IAAH,iJAQfqB,GAAarB,EAAAA,EAAAA,IAAOsB,EAAAA,GAAPtB,CAAH,gGAKVuB,EAAevB,EAAAA,GAAAA,OAAH,6MAYZwB,GAAcxB,EAAAA,EAAAA,IAAOyB,EAAAA,GAAPzB,CAAH,iF,SCnBlB0B,EAAgB,CAAEC,YAAa,IA8BrC,EA5BkB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAWnB,OACE,SAACR,EAAD,WACE,SAAC,KAAD,CAAQM,cAAeA,EAAeE,SAZrB,SAACC,EAAD,GAA2B,IAAjBC,EAAgB,EAAhBA,UAC7B,GAAiC,KAA7BD,EAAMF,YAAYI,OAGpB,OAFAC,MAAM,0CACNF,IAGFF,EAASC,EAAMF,aACfG,GACD,EAIG,UACE,UAACT,EAAD,YACE,SAACG,EAAD,CACES,KAAK,OACLC,KAAK,cACLC,YAAY,yBAEd,SAACZ,EAAD,CAAcU,KAAK,SAAnB,UACE,SAAC,MAAD,YAMX,E,+ECJD,EA7BqB,SAAC,GAAgB,IAAdG,EAAa,EAAbA,OACtB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAO/B,EAAP,KAAegC,EAAf,KACA,GAAkCD,EAAAA,EAAAA,UAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KAEA,GAAuBC,EAAAA,EAAAA,MAAhBC,GAAP,eAuBA,OAtBAjC,QAAQC,IAAI0B,IAEZO,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQF,EAAaG,IAAI,SADjB,wCAOd,8GAE2BC,EAAAA,EAAAA,gBAAeF,GAF1C,OAEUG,EAFV,OAGItC,QAAQC,IAAIqC,GACZT,GAAU,OAAIS,EAASC,UACvBR,EAAaO,EAASE,aAL1B,gDAOIxC,QAAQC,IAAR,MAPJ,0DAPc,sBAEdD,QAAQC,IAAIkC,GACE,OAAVA,GAHU,mCAiBdM,EACD,GAAE,CAACR,KAEG,yBAAMH,EAAY,IAAK,SAAClC,EAAAA,UAAD,CAAWC,OAAQA,KAClD,E,UCXD,EAjBe,WACb,OAA4B+B,EAAAA,EAAAA,UAAS,IAArC,eAAOD,EAAP,KAAee,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MAOjB,OACE,6BACE,oCACA,SAAC,EAAD,CAAWzB,SARM,SAAAM,GACnBiB,EAAUjB,GACVkB,EAAS,UAAD,OAAWlB,GAAQ,CAAEoB,SAAS,GACvC,KAMG,SAAC,EAAD,CAAclB,OAAQA,MAG3B,C,gRCnBKmB,EAAU,mCACVC,EAAW,+BAIJC,EAAkB,mCAAG,oGAGTC,IAAAA,IAAA,UAClBF,EADkB,uCACqBD,IAJZ,cAG1BR,EAH0B,yBAMzBA,EAASY,MANgB,2CAAH,qDAWlBb,EAAc,mCAAG,WAAMc,GAAN,uFACLF,IAAAA,IAAA,UAClBF,EADkB,iCACeD,EADf,kBACgCK,EADhC,2BADK,cACtBb,EADsB,OAI5BtC,QAAQC,IAAIqC,EAASY,MAJO,kBAKrBZ,EAASY,MALY,2CAAH,sDAQdE,EAAY,mCAAG,WAAMjD,GAAN,uFACH8C,IAAAA,IAAA,UAClBF,EADkB,kBACA5C,EADA,oBACc2C,EADd,oBADG,cACpBR,EADoB,yBAInBA,EAASY,MAJU,2CAAH,sDAOZG,EAAY,mCAAG,WAAMlD,GAAN,uFACH8C,IAAAA,IAAA,UAClBF,EADkB,kBACA5C,EADA,4BACsB2C,EADtB,oBADG,cACpBR,EADoB,yBAInBA,EAASY,MAJU,2CAAH,sDAOZI,EAAe,mCAAG,WAAMnD,GAAN,uFACN8C,IAAAA,IAAA,UAClBF,EADkB,kBACA5C,EADA,4BACsB2C,EADtB,2BADM,cACvBR,EADuB,yBAItBA,EAASY,MAJa,2CAAH,qD","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.js","components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.js","components/SearchMovies/SearchMovies.js","pages/Movies.js","services/API.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledMovieList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  align-items: baseline;\n`;\n\nexport const MovieListItem = styled.li`\n  width: 300px;\n  text-align: center;\n`;\n\nexport const MovieListTitle = styled.p`\n  font-size: 18px;\n  font-weight: 500;\n  margin-top: 5px;\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n  color: black;\n  &:hover {\n    color: orange;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport {\n  MovieListItem,\n  StyledMovieList,\n  MovieListTitle,\n  MovieLink,\n} from './MovieList.styled';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n  console.log(movies);\n  return (\n    <StyledMovieList>\n      {movies.map(({ id, title, poster_path }) => (\n        <MovieListItem key={id}>\n          <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n            <img\n              src={`https://image.tmdb.org/t/p/w300/${poster_path}`}\n              alt={title}\n            />\n            <MovieListTitle>{title}</MovieListTitle>\n          </MovieLink>\n        </MovieListItem>\n      ))}\n    </StyledMovieList>\n  );\n};\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const SearchConteiner = styled.div`\n  padding-top: 10px;\n  /* display: block; */\n  text-align: center;\n  /* margin-left: auto;\n  margin-right: auto; */\n`;\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  justify-content: baseline;\n  align-items: center;\n`;\nexport const SearchButton = styled.button`\n  padding: 5px;\n  background-color: white;\n  color: black;\n\n  text-align: center;\n  :hover {\n    border-color: orange;\n    background-color: orange;\n    color: white;\n  }\n`;\nexport const StyledInput = styled(Field)`\n  padding: 5px;\n  height: 35px;\n  border-right: none;\n`;\n","import { Formik } from 'formik';\nimport { ImSearch } from 'react-icons/im';\nimport {\n  SearchConteiner,\n  StyledForm,\n  SearchButton,\n  StyledInput,\n} from './SearchBox.styled';\n\nconst initialValues = { searchParam: '' };\n\nconst SearchBox = ({ onSubmit }) => {\n  const handleSubmit = (value, { resetForm }) => {\n    if (value.searchParam.trim() === '') {\n      alert('Please specify your search query.');\n      resetForm();\n      return;\n    }\n    onSubmit(value.searchParam);\n    resetForm();\n  };\n\n  return (\n    <SearchConteiner>\n      <Formik initialValues={initialValues} onSubmit={handleSubmit}>\n        <StyledForm>\n          <StyledInput\n            type=\"text\"\n            name=\"searchParam\"\n            placeholder=\"Search movies......\"\n          />\n          <SearchButton type=\"submit\">\n            <ImSearch />\n          </SearchButton>\n        </StyledForm>\n      </Formik>\n    </SearchConteiner>\n  );\n};\nexport default SearchBox;\n","import { MovieList } from 'components/MovieList/MovieList';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getSearchQuery } from '../../services/API';\n\nconst SearchMovies = ({ search }) => {\n  const [movies, setMovies] = useState([]);\n  const [totalPage, setTotalPage] = useState(0);\n\n  const [searchParams] = useSearchParams();\n  console.log(search);\n\n  useEffect(() => {\n    const query = searchParams.get('query');\n    console.log(query);\n    if (query === null) {\n      return;\n    }\n\n    async function getSearchMovies() {\n      try {\n        const responce = await getSearchQuery(query);\n        console.log(responce);\n        setMovies([...responce.results]);\n        setTotalPage(responce.total_pages);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getSearchMovies();\n  }, [searchParams]);\n\n  return <div>{totalPage > 0 && <MovieList movies={movies} />}</div>;\n};\nexport default SearchMovies;\n","import SearchBox from 'components/SearchBox/SearchBox';\nimport SearchMovies from 'components/SearchMovies/SearchMovies';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst Movies = () => {\n  const [search, setSearch] = useState('');\n  const navigate = useNavigate();\n\n  const createSearch = name => {\n    setSearch(name);\n    navigate(`?query=${name}`, { replace: true });\n  };\n\n  return (\n    <main>\n      <h1>Movies</h1>\n      <SearchBox onSubmit={createSearch} />\n      <SearchMovies search={search} />\n    </main>\n  );\n};\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = 'cd467bf58867975fca1c146cba682fc3';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\n// axios.defaults.baseURL = BASE_URL;\n\nexport const getTrendingMoovies = async () => {\n  // type:all, movie, tv, person;\n  // time: day, week;\n  const responce = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return responce.data;\n};\n\n//api.themoviedb.org/3/trending/movie/day?api_key=cd467bf58867975fca1c146cba682fc3\n\nexport const getSearchQuery = async searchQuery => {\n  const responce = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${searchQuery}&page=1&language=en-US`\n  );\n  console.log(responce.data);\n  return responce.data;\n};\n\nexport const getMovieById = async id => {\n  const responce = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return responce.data;\n};\n\nexport const getMovieCast = async id => {\n  const responce = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return responce.data;\n};\n\nexport const getMovieReviews = async id => {\n  const responce = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return responce.data;\n};\n\n// https://api.themoviedb.org/3/search/company?api_key=cd467bf58867975fca1c146cba682fc3&query={поиск запрос}&page={страница}\n\n// /trending/get-trending {/trending/{media_type}/{time_window}} список самых популярных фильмов на сегодня для создания коллекции на главной странице.\n// /search/search-movies поиск кинофильма по ключевому слову на странице фильмов.\n// /movies/get-movie-details запрос полной информации о фильме для страницы кинофильма.\n// /movies/get-movie-credits запрос информации о актёрском составе для страницы кинофильма.\n// /movies/get-movie-reviews запрос обзоров для страницы кинофильма.\n"],"names":["StyledMovieList","styled","MovieListItem","MovieListTitle","MovieLink","Link","MovieList","movies","location","useLocation","console","log","map","id","title","poster_path","to","state","from","src","alt","SearchConteiner","StyledForm","Form","SearchButton","StyledInput","Field","initialValues","searchParam","onSubmit","value","resetForm","trim","alert","type","name","placeholder","search","useState","setMovies","totalPage","setTotalPage","useSearchParams","searchParams","useEffect","query","get","getSearchQuery","responce","results","total_pages","getSearchMovies","setSearch","navigate","useNavigate","replace","API_KEY","BASE_URL","getTrendingMoovies","axios","data","searchQuery","getMovieById","getMovieCast","getMovieReviews"],"sourceRoot":""}